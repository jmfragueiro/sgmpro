///////////////////////////////////////////////////////////
//  CURunJob.cs
//  Clase de implementación de CURunJob.
//  Generated by Fito
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fer
///////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Data;
using scioBaseLibrary;
using scioBaseLibrary.excepciones;
using scioBaseLibrary.interfases;
using scioParamLibrary.dominio.repos;
using scioPersistentLibrary;
using scioPersistentLibrary.acceso;
using scioToolLibrary.enums;
using sgmpro.dominio.scheduler;
using sgmpro.dominio.scheduler.repos;
using sgmpro.helpers;

namespace cuGenerarJobs {
    public class CURunJob : IControladorCasoUso {
        #region Implementation of IControladorCasoUso
        /// <summary>
        /// Implementación de la propiedad de la interfaz.
        /// </summary>
        public object Padre { get; set; }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// Aqui se espera que venga: [0](string)=el nombre del caso de uso;
        /// [1](Guid)= el ID del Job que debe correrse (ejecutarse) el cual 
        /// permitirá obtener el objeto real (que ya debe existir), si no se
        /// pasa ningnu job, entonces verifica si hay alguno por ejecutar de
        /// acuerdo a la siguiente ejecución.
        /// </summary>
        public bool iniciar(Object padre, params Object[] valor) {
            Padre = padre;

            try {
                // Si nada esta corriendo obtiene los jobs que debe ejecutar 
                // en base al argumento pasado o a lo disponible para ejecución
                // e inicia efectivamente los trabajos de generación preparados)
                foreach (Ejecucion exe in Ejecuciones.GetEjecucionesAplicables((valor != null && valor.Length > 0) ? valor[0] : null))
                    try {
                        exe.ejecutar();
                    } catch (Exception e) {
                        Sistema.Controlador.logear("ERROR-GENERACION-LISTA", ENivelMensaje.ERROR, e.ToString());
                    }

                // Si termina está ok, entonces retorna true
                return true;
            } catch (Exception e) {
                throw new AppErrorException("ERROR-EJECUTAR-GENERACION-LISTA", e.ToString());
            }
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public void aceptarParametros(params Object[] parametros) {}
        #endregion
    }
}