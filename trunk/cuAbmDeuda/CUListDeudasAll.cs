///////////////////////////////////////////////////////////
//  CUListDeudasAll.cs
//  Clase de implementación de CUListDeudasAll.
//  Generated by Fito
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fito
///////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Drawing;
using System.Windows.Forms;
using cuAbmDeuda.Properties;
using scioBaseLibrary;
using scioBaseLibrary.excepciones;
using scioControlLibrary;
using scioControlLibrary.enums;
using scioParamLibrary.dominio;
using scioParamLibrary.dominio.repos;
using scioPersistentLibrary.acceso;
using scioPersistentLibrary.interfases;
using scioToolLibrary;
using scioToolLibrary.enums;
using sgmpro.dominio.configuracion;

namespace cuAbmDeuda {
    /// <summary>
    /// Esta clase hereda de CUListGenerico y se encarga de 
    /// gestionar un PanelListABMV para la entidad Deuda.
    /// </summary>
    public class CUListDeudasAll : CUPreviewGenerico<Deuda> {
        private readonly Parametro _pendiente = Parametros.GetByClave("ESTADODEUDA.PENDIENTE");

        /// <summary>
        /// Constructor de la clase que inicializa elementos internos.
        /// </summary>
        public CUListDeudasAll() {
            ControlEditable = new CUAbmDeuda();
            ColsInvisibles.Add("Imputaciones");
            ColsInvisibles.Add("CapitalO");
            ColsInvisibles.Add("InteresO");
            ColsInvisibles.Add("HonorO");
            ColsInvisibles.Add("GastosO");
            ModoListado = EModoListado.RELACIONAL;
        }

        #region IControladorPreview Members
        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override string getTitulo() {
            return Mensaje.TextoMensaje("TITULO-ABMV-DEUDA");
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override Icon getIcono() {
            return Resources.pago;
        }
        #endregion

        #region IControladorListable Members
        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        protected override PanelPreview<Deuda> crearPanelPreview() {
            return new PanelPreviewDeuda(ControlEditable);
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override BindingSource listList(params object[] parametros) {
            try {
                // Agrega el filtro de base que debe utilizarse (para, por 
                // ejemplo, obtener solo el detail adecuado de un master)
                ICriterioConsulta master = getFiltroMaster();
                if (!Filtros.Contains(master))
                    Filtros.Add(master);

                // Ejecuta el filtro y obtiene resultados de la base (se debe sobrepasar en 
                // una subclase de ésta (y usar GetAllbyOrden) si se quieren los "muertos"
                _bs = _bs ?? new BindingSource();

                _bs.DataSource =
                    (ModoListado == EModoListado.OBJETO)
                        ? CollectionHelper.ConvertTo(RepositorioGenerico<Deuda>.GetByCriteria(false, Filtros, Ordenamiento))
                        : RepositorioGenerico<Deuda>.SelectByCriteria(false, Filtros, Ordenamiento);

                // Obtiene la cantidad de registros para mostrar
                Cuenta = ((DataTable)_bs.DataSource).Rows.Count;

                return _bs;
            } catch (Exception e) {
                throw new VistaErrorException("DATA-LISTNOK", e.ToString());
            }
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// Solo deja borrar una deuda solo si no tiene pagos hechos (es PENDIENTE).
        /// </summary>
        public override void listRemove(params object[] parametros) {
            if (!_panelListado.getObjetoActual().Estado.Equals(_pendiente)) 
                throw new DataErrorException("DEUDA-ANULAR-NOK");

            base.listRemove(parametros);
            Sistema.Controlador.mostrar("DEUDA-ANULAR-OK", ENivelMensaje.INFORMACION, null, false);
        }
        #endregion
    }
}