///////////////////////////////////////////////////////////
//  IRepositorioEntidades.cs
//  Implementation of the Interface IRepositorioEntidades
//  Generated by Enterprise Architect
//  Created on:      15-Dic-2009 07:11:10 p.m.
//  Original author: Fito
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Data;
using NHibernate.Criterion;

namespace scioPersistentLibrary.interfases {
    public interface IRepositorioEntidades<T> where T : IEntidadIdentificable {
        /// <summary>
        /// Este metododevuelve un objeto persistido del tipo T a 
        /// partir de su ID interno (al servicio de persistencia).
        /// </summary>
        /// <param name="id">
        /// El ID interno del objeto (registro) de tipo T deseado.
        /// </param>
        /// <returns>
        /// El objeto de tipo T que cuyo ID coincide con el pasado.
        /// </returns>
        T getById(Guid id);

        /// <summary>
        /// Este metodo devuelve todos los objetos persistidos del tipo T.
        /// </summary>
        /// <returns>
        /// La colección de objeto de tipo T obtenidos (sin filtros).
        /// </returns>
        IList<T> getAll();

        /// <summary>
        /// Este metodo devuelve todos los objetos persistidos del tipo T
        /// que se encuentren 'vivos'. El significado de 'vivo' debería
        /// implementarse aquí (por ejemplo FechaBaja=null).
        /// </summary>
        /// <returns>
        /// La colección de objetos vivos de tipo T obtenidos (sin filtros).
        /// </returns>
        IList<T> getAliveAll();

        /// <summary>
        /// Este metodo devuelve una lista de objetos persistidos que cumplen 
        /// con los criterios pasados como argumento y ordenados según un att
        /// determinado.
        /// </summary>
        /// <param name="criterios">
        /// La lista de criterios (string, object) a aplicarse.
        /// </param>
        /// <param name="orden">
        /// El criterio Order a utilizarse como orden.
        /// </param>
        /// <returns>
        /// La lista de objetos que coincide con el criterio pasado.
        /// </returns>
        IList<T> getByCriteriaOrden(IList<ICriterion> criterios, IList<Order> orden);

        /// <summary>
        /// Este metodo devuelve una lista de objetos persistidos que cumplen 
        /// con los criterios pasados como argumento y ordenados según un att
        /// determinado.
        /// </summary>
        /// <param name="criterios">
        /// La lista de criterios (string, object) a aplicarse.
        /// </param>
        /// <param name="orden">
        /// El criterio Order a utilizarse como orden.
        /// </param>
        /// <returns>
        /// La lista de objetos que coincide con el criterio pasado.
        /// </returns>
        IList<T> getAliveByCriteriaOrden(IList<ICriterion> criterios, IList<Order> orden);

        /// <summary>
        /// Este metodo devuelve una lista de objetos persistidos que cumplen 
        /// con los criterios pasados como argumento y ordenados según un att
        /// determinado.
        /// </summary>
        /// <param name="criterios">
        /// La lista de criterios (string, object) a aplicarse.
        /// </param>
        /// <param name="orden">
        /// El criterio Order a utilizarse como orden.
        /// </param>
        /// <returns>
        /// La lista de objetos que coincide con el criterio pasado.
        /// </returns>
        DataTable listByCriteriaOrden(IList<ICriterion> criterios, IList<Order> orden);

        /// <summary>
        /// Este metodo devuelve una lista de objetos persistidos que cumplen 
        /// con los criterios pasados como argumento y ordenados según un att
        /// determinado.
        /// </summary>
        /// <param name="criterios">
        /// La lista de criterios (string, object) a aplicarse.
        /// </param>
        /// <param name="orden">
        /// El criterio Order a utilizarse como orden.
        /// </param>
        /// <returns>
        /// La lista de objetos que coincide con el criterio pasado.
        /// </returns>
        DataTable listAliveByCriteriaOrden(IList<ICriterion> criterios, IList<Order> orden);
    }
}