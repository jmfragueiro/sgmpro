///////////////////////////////////////////////////////////
//  IOrdenConsulta.cs
//  Implementation of the Interface IOrdenConsulta
//  Generated by Enterprise Architect
//  Created on:      15-Dic-2009 07:11:10 p.m.
//  Original author: Fito
///////////////////////////////////////////////////////////
using NHibernate.Criterion;

namespace scioPersistentLibrary.interfases {
    /// <summary>
    /// Esta interfase define el comportamiento deseable de una clase que 
    /// represente un orden de consulta que pueda aplicarse como ordenador
    /// del resultado de una consulta de selección contra el motor usado de 
    /// persistencia. Esta interfase actúa entonces como cara pública de una 
    /// capa de abstracción de la forma en que el mecanismo de persistencia 
    /// realiza los ordenamientos de resultados obtenidos desde el motor de 
    /// persistencia, permitiendo, por ejemplo, utilizar consultas SQL u 
    /// otras de interfaces Criteria de mecanismos ORM, y permitiendo así 
    /// accesos tanto relacionales como de objetos.
    /// </summary>
    public interface IOrdenConsulta : IElementoConsulta {
        /// <summary>
        /// Este método debe devolver el criterio de ordenamiento contenido 
        /// como un string que pueda adozarse a, un componente Orderby de, 
        /// una cláusula SQL relacional de manera "atómica" (es decir sin 
        /// interferir con lo que ya pudiera haber dentro del componente).
        /// </summary>
        /// <returns>
        /// Una cadena con un pedazo de OrderBy sin dicha palabra clave.
        /// </returns>
        string getOrdenSQL();

        /// <summary>
        /// Este método debe devolver el criterio de ordenamiento contenido 
        /// como un string que pueda adozarse a, un componente Orderby de, 
        /// una cláusula SQL relacional de manera "atómica" (es decir sin 
        /// interferir con lo que ya pudiera haber dentro del componente).
        /// </summary>
        /// <param name="prefijo">
        /// Un prefijo para el campo de ordenamiento.
        /// </param>
        /// <returns>
        /// Una cadena con un pedazo de OrderBy sin dicha palabra clave.
        /// </returns>
        string getOrdenSQL(string prefijo);

        /// <summary>
        /// Este método debe devolver un criterio de ordenamiento de NHibernate, 
        /// es decir un objeto Order que pueda agregarse a una consulta propia
        /// de NHibernate (un ICriteria), a partir de su contenido actual.
        /// </summary>
        /// <returns>
        /// Una objeto Order con un criterio de ordenamiento de consulta.
        /// </returns>
        Order getOrdenNH();        
    }
}