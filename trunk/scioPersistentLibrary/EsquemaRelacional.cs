///////////////////////////////////////////////////////////
//  EsquemaRelacional.cs
//  Clase de generación de cadenas del consultas relacionales
//  Generated by Fito
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fito
///////////////////////////////////////////////////////////
using scioPersistentLibrary.interfases;

namespace scioPersistentLibrary {
    public class EsquemaRelacional {
        public static IHelperRelacional Helper { get; set; }

        /// <summary>
        /// Este método debería devolver el prefijo para campos de la tabla,
        /// de manera de que el nomreb de cada campo de la tabla, en la base 
        /// de datos, se pueda armar con este prefijo + guinbajo + el nombre 
        /// del atributo dentro de la clase.
        /// </summary>
        public static string GetPrefijo(string tabla) {
            switch (tabla.ToUpper()) {
                case "PARAMETRO":
                    return "par";
            }

            // Si no ubico la tabla busca en el helper (si hay)
            string otroPrefijo = null;
            if (Helper != null)
                otroPrefijo = Helper.getPrefijo(tabla);
            return (otroPrefijo ?? string.Empty);
        }

        /// <summary>
        /// Este método debería devolver la lista de campos del select, con
        /// todos los campos y los nombres que se desean mostrar en un listado.
        /// </summary>
        public static string GetSelectString(string tabla) {
            switch (tabla.ToUpper()) {
                case "PARAMETRO":
                    return "select "
                           + "par_id as Id,"
                           + "par_clave as Clave,"
                           + "par_nombre as Nombre,"
                           + "par_orden as Orden,"
                           + "par_valorlong as Valorlong,"
                           + "par_valorstring as Valorstring,"
                           + "par_valordate as Valordate,"
                           + "par_valorchar as Valorchar,"
                           + "par_valorbool as Valorbool,"
                           + "par_valordouble as Valordouble"
                           + " from parametro where";
            }

            // Si no ubico la tabla busca en el helper (si hay)
            string otroSelect = null;
            if (Helper != null)
                otroSelect = Helper.getSelectString(tabla);
            return (otroSelect ?? "*");
        }
    }
}