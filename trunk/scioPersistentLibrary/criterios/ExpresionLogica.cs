///////////////////////////////////////////////////////////
//  ExpresionSimple.cs
//  Implementación de una expresion de comparación SQL simple
//  (como mayorque, menorque, igual, etc.)
//  Generated by Enterprise Architect
//  Created on:      13-abr-2009 17:23:40
//  Original author: Fito
///////////////////////////////////////////////////////////
using NHibernate.Criterion;
using scioPersistentLibrary.interfases;

namespace scioPersistentLibrary.criterios {
    /// <summary>
    /// Esta clase abstracta representa el concepto de una expresión lógica 
    /// dentro de un criterio de consulta a un motor de persistencia. Una 
    /// expresión de este tipo permite combinar dos expresiones de consulta 
    /// (sean simples o lógicas) en una expresion mayor (por ejemplo: de dos 
    /// componentes atómicos unidos por un AND, como "campo = '23' and fecha 
    /// is not null" dentro de un Where de cláusula Select de un motor SQL). 
    /// </summary>
    public abstract class ExpresionLogica : CriterioConsulta {
        protected ICriterioConsulta _left, _rigth;

        /// <summary>
        /// Constructor de la clase para una expresion binaria (de dos operandos)
        /// donde el segundo operando es una clase persistente (IEntidadIdentificable 
        /// para por ejemplo "campo = unaCuenta"). En este caso se toma su Id para
        /// la cadena where y se toma ek propio objeto para el NHicriteria.
        /// </summary>
        protected ExpresionLogica(ICriterioConsulta left, ICriterioConsulta rigth) {
            _left = left;
            if (rigth != null)
                _rigth = rigth;
        }

        /// <summary>
        /// Este método debe encargarase de devolver la expresion de cadena 
        /// del operando en cuestion (obviamente depende de la subclase).
        /// </summary>
        /// <returns>
        /// La representación de cadena del operando deseado.
        /// </returns>
        protected abstract string getOpString();

        /// <summary>
        /// Este método debe encargarase de devolver la expresion de Criteria 
        /// del ORM para el operando en cuestion (obvio depende de la subclase).
        /// El NH es porque arrancamos con NHibernate (ggg).
        /// </summary>
        /// <returns>
        /// La representación de Criteria del ORM para el operando deseado.
        /// </returns>
        protected abstract ICriterion getCriterionNH(ICriterioConsulta left, ICriterioConsulta rigth);

        #region Implementation of ICriterioConsulta
        public override string getCriterioSQL(string prefijo) {
            return _rigth != null
                       ? string.Format(" ({0}) {1} ({2}) ", _left.getCriterioSQL(prefijo), getOpString(), _rigth.getCriterioSQL(prefijo))
                       : string.Format(" {0} ({1}) ", getOpString(), _left.getCriterioSQL(prefijo));
        }

        public override ICriterion getCriterioNH() {
            return _rigth != null
                       ? getCriterionNH(_left, _rigth)
                       : getCriterionNH(_left, null);
        }
        #endregion
    }
}