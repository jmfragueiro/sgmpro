///////////////////////////////////////////////////////////
//  Parametros.cs
//  Implementation of the Class Parametros
//  Generated by Enterprise Architect
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fito
///////////////////////////////////////////////////////////
using System.Collections.Generic;
using scioPersistentLibrary.acceso;
using scioPersistentLibrary.criterios;
using scioPersistentLibrary.enums;
using scioPersistentLibrary.orden;

namespace scioParamLibrary.dominio.repos {
    /// <summary>
    /// Esta clase representa al Repositorio de persistencia
    /// de Nhibernate para la entidad Parametro del sistema.
    /// </summary>
    public class Parametros : RepositorioPersistente<Parametro> {
        /// <summary>
        /// Este método devuelve un Parámetro según su clave.
        /// </summary>
        /// <param name="clave">
        /// La clave del parámetro deseado.
        /// </param>
        /// <returns>
        /// El objeto parámetro que coincide con la clave.
        /// </returns>
        public static Parametro GetByClave(string clave) {
            return GetUniqueByCriteria(true, new[]{Criterios.Igual("Clave", clave)});
        }

        /// <summary>
        /// Este método devuelve una lista de Parámetros según su Tipo,
        /// pero además filta dicha lista por los que tiene una clave 
        /// que empieza con la cadena determinada por el argumento clave.
        /// </summary>
        /// <param name="tipo">
        /// El Tipo de parámetros deseado.
        /// </param> 
        /// <param name="clave">
        /// La clave utilizada para filtrar la lista con LIKE (se agrega '%').
        /// </param>
        /// <returns>
        /// La lista de objetos parámetros que coinciden con el filtro.
        /// </returns>
        public static IList<Parametro> GetByTipoClaveLike(ETipoParametro tipo, string clave) {
            return GetByCriteria(true,
                new[]{Criterios.Igual("Tipo", tipo), Criterios.Like("Clave", clave + "%")},
                new[]{Orden.Asc("Orden")});
        }

        /// <summary>
        /// Este método devuelve una lista de Parámetros según su Tipo,
        /// pero además filta dicha lista por los que tiene una clave 
        /// que empieza con la cadena determinada por el argumento clave.
        /// </summary>
        /// <param name="tipo">
        /// El Tipo de parámetros deseado.
        /// </param> 
        /// <param name="clave">
        /// La clave utilizada para filtrar la lista con LIKE (se agrega '%').
        /// </param>
        /// <returns>
        /// La lista de objetos parámetros que coinciden con el filtro.
        /// </returns>
        public static IList<Parametro> GetByTipoClaveLikeDescNombre(ETipoParametro tipo, string clave) {
            return GetByCriteria(true,
                new[] { Criterios.Igual("Tipo", tipo), Criterios.Like("Clave", clave + "%") },
                new[] { Orden.Desc("Nombre") });
        }
    }
}