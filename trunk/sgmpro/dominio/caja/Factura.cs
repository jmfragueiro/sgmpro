///////////////////////////////////////////////////////////
//  Factura.cs
//  Implementation of the Class Factura
//  Generated by Enterprise Architect
//  Created on:      13-May-2009 03:54:59 p.m.
//  Original author: Fernando
///////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using scioBaseLibrary.excepciones;
using scioParamLibrary.dominio;
using scioPersistentLibrary.acceso;
using scioToolLibrary;
using sgmpro.dominio.configuracion;

namespace sgmpro.dominio.caja {
    /// <summary>
    /// Esta clase representa a una factura emitida por el Estudio a alguno de
    /// sus clientes, en concepto por el cobro de servicios. A hoy, una factura 
    /// no puede eliminarse ni 'reavivarse'. Una factura tiene a su vez varios
    /// items asociados (las lineas de la factura). Esta clase es persistente.
    /// </summary>
    public class Factura : EntidadIdentificada<Factura> {
        /// <summary>
        /// El tipo de recibo. Parámetro. No Nulo. FK.
        /// </summary>
        public virtual Parametro Tipo { get; set; }
        /// <summary>
        /// El numero de recibo. No Nulo.
        /// </summary>
        public virtual string Numero { get; set; }
        /// <summary>
        /// La fecha del recibo del pago. No Nulo.
        /// </summary>
        public virtual DateTime Fecha {
            get { return _fecha; }
            set { _fecha = Fechas.GetOkDate(value); }
        }
        private DateTime _fecha = DateTime.Now;
        /// <summary>
        /// El cliente a quien se le hace la factura. FK.
        /// </summary>
        public virtual Entidad Cliente { get; set; }
        /// <summary>
        ///Si la factura se hace al contado o por cuenta corriente.
        /// </summary>
        public virtual bool Contado { get; set; }
        /// <summary>
        ///El IVA aplicado en la factura.
        /// </summary>
        public virtual double IVA { get; set; }
        /// <summary>
        /// Conjunto de cuotas del conveino. No Nulo. FK (List).
        /// </summary>
        public virtual IList<ItemFactura> Items { get; set; }

        /// <summary>
        /// Constructor que instancia los conjuntos de la clase.
        /// </summary>
        public Factura() {
            Items = new List<ItemFactura>();
        }

        /// <summary>
        /// Ver descripción en clase base. En este caso al borrarse 
        /// (logicamente) el recibo se agrega una marca de texto en 
        /// la descripcion del mismo.
        /// </summary>
        public override void delete() {
            throw new DataErrorException("DATA-DEL-NOK");
        }

        /// <summary>
        /// Este método evita que se desborre (o reavive) un recibo.
        /// </summary>
        public override void undelete() {
            throw new DataErrorException("DATA-UNDEL-NOK");
        }

        /// <summary>
        /// Este método genera el string por defecto a mostrar en todos lados.
        /// </summary>
        public override string ToString() {
            return string.Format("{0} ({1})", Tipo, Numero);
        }
    }
}