///////////////////////////////////////////////////////////
//  Ejecuciones.cs
//  Implementation of the Class Ejecuciones
//  Generated by Enterprise Architect
//  Created on:      13-May-2009 03:55:00 p.m.
//  Original author: Fito
///////////////////////////////////////////////////////////using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System;
using scioPersistentLibrary.acceso;
using System.Data;

namespace sgmpro.dominio.scheduler.repos {
    public class Ejecuciones {
        /// <summary>
        /// Este metodo obtiene una lista de Ejecuciones a iniciar (crea una 
        /// Ejecucion para cada Jobs a ejecutar disponible, obtenido sea por 
        /// ser el Job pasado como argumento de la llamada o por estar en la 
        /// lista de los disponibles segun su siguiente fecha de ejecucion).
        /// </summary>
        public static IEnumerable<Ejecucion> GetEjecucionesAplicables(Object job) {
            IList<Ejecucion> lista = new List<Ejecucion>();

            // Verifica si vino un ID del job a ejecutar en la llamada o
            // si no vino nada se trae todos los pendientes para ejecutar
            if (job != null && job is Guid)
                lista.Add(new Ejecucion { Job = RepositorioGenerico<Job>.GetById((Guid)job) });
            else
                foreach (DataRow row in Jobs.SelectIdsJobsEjecutables().Rows)
                    lista.Add(new Ejecucion { Job = RepositorioGenerico<Job>.GetById((Guid)row[0]) });

            return lista;
        }
    }
}
