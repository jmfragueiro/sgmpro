///////////////////////////////////////////////////////////
//  Ejecucion.cs
//  Implementation of the Class Ejecucion
//  Generated by Enterprise Architect
//  Created on:      20-abr-2009 16:57:18
//  Original author: Fito
///////////////////////////////////////////////////////////
using System;
using scioPersistentLibrary.acceso;
using scioToolLibrary;
using System.Collections.Generic;
using scioBaseLibrary;
using scioToolLibrary.enums;
using System.Data;
using scioBaseLibrary.excepciones;

namespace sgmpro.dominio.scheduler {
    /// <summary>
    ///   Esta clase representa a una ejecucion dentro de un trabajo (job) de generación de 
    ///   listas. Un trabajo de este tipo implica que en unmomento determinado se inicia la 
    ///   el trabajo conla ejecución de una serie de tareas de generacion, donde en cada una 
    ///   se genera una lista de un tipo definido. Esta clase es persistente.
    /// </summary>
    public class Ejecucion : EntidadIdentificada<Ejecucion> {
        /// <summary>
        ///   El Job al que pertenece la tarea. No Nulo. FK.
        /// </summary>
        public virtual Job Job { get; set; }
        /// <summary>
        ///   Fecha de inicio de ejecución de la tarea.
        /// </summary>
        public virtual DateTime Inicio {
            get { return _inicio; }
            set { _inicio = Fechas.GetOkDate(value); }
        }
        private DateTime _inicio = Fechas.FechaNull;
        /// <summary>
        ///   Fecha de fin de ejecución de la tarea.
        /// </summary>
        public virtual DateTime Fin {
            get { return _fin; }
            set { _fin = Fechas.GetOkDate(value); }
        }
        private DateTime _fin = Fechas.FechaNull;
        /// <summary>
        /// Descripción del resultado de la tarea.
        /// </summary>
        public virtual string Resultado { get; set; }

        /// <summary>
        /// Este método ejecuta efectivamente una tarea dentro de un job.
        /// </summary>
        public virtual void ejecutar() {
            Inicio = DateTime.Now;
            Job.ejecutar(this);
            Fin = DateTime.Now;
            save();
        }

        /// <summary>
        /// Este método genera el string por defecto a mostrar en todos lados.
        /// </summary>
        public override string ToString() {
            return string.Format("{0}[{1}]", Job, Inicio);
        }
    }
}