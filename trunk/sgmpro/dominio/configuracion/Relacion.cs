///////////////////////////////////////////////////////////
//  Relacion.cs
//  Implementation of the Class Relacion
//  Generated by Enterprise Architect
//  Created on:      13-May-2009 03:54:54 p.m.
//  Original author: Fernando
///////////////////////////////////////////////////////////
using System;
using scioParamLibrary.dominio;
using scioPersistentLibrary.acceso;
using scioToolLibrary;

namespace sgmpro.dominio.configuracion {
    /// <summary>
    /// Esta clase representa a una relación entre una persona y otra asociada.
    /// Una persona puede tener en el sistema varias personas relacionadas como
    /// esposa, vecino, padre, hermano, etc. Esta clase es persistente.
    /// </summary>
    public class Relacion : EntidadIdentificada<Relacion> {
        /// <summary>
        /// El Tipo de relación (un Parametro del sistema). Parámetro. No Nulo.
        /// </summary>
        public virtual Parametro Tipo { get; set; }
        /// <summary>
        /// El origen de la relación (la persona a la que se relaciona otra). No Nulo. FK.
        /// </summary>
        public virtual Persona Origen { get; set; }
        /// <summary>
        /// El destino de la relación (la persona que se relaciona a la otra). No Nulo. FK. 
        /// </summary>
        public virtual Persona Destino { get; set; }
        /// <summary>
        /// Un comentario sobre la relación.
        /// </summary>
        public virtual string Comentario { get; set; }
        /// <summary>
        /// La fecha de alta de la relación. No Nulo.
        /// </summary>                
        public virtual DateTime FechaUMod {
            get { return _fechaumod; }
            set { _fechaumod = Fechas.GetOkDate(value); }
        }
        private DateTime _fechaumod = DateTime.Now;

        /// <summary>
        /// Este método genera el string por defecto a mostrar en todos lados.
        /// </summary>
        public override string ToString() {
            return string.Format("{0}[{2}]{1}", Origen, Destino, Tipo);
        }
    }
}