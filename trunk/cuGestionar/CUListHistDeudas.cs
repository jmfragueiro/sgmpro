///////////////////////////////////////////////////////////
//  CUListHistDeudas.cs
//  Clase de implementación de CUListHistDeudas.
//  Generated by Fito
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fito
///////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Windows.Forms;
using cuAbmDeuda;
using scioBaseLibrary.excepciones;
using scioControlLibrary.enums;
using scioPersistentLibrary.acceso;
using scioPersistentLibrary.criterios;
using scioPersistentLibrary.interfases;
using scioToolLibrary;
using sgmpro.dominio.configuracion;

namespace cuGestionar {
    /// <summary>
    /// Esta clase hereda de CUListDeudas y se encarga de gestionar
    /// un PanelListABMV para toda la historia de la entidad Deuda 
    /// dentro de la ventana de gestionar (en Tab Hisotrial Deudas).
    /// </summary>
    public class CUListHistDeudas : CUListDeudas {
        /// <summary>
        /// Constructor de la clase que inicializa elementos internos.
        /// </summary>
        public CUListHistDeudas() {
            ColsInvisibles.Remove("FechaBaja");
        }

        #region IControladorListable Members
        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override ICriterioConsulta getFiltroMaster() {
            if (ObjetoMaster is Cuenta)
                return Criterios.Igual("Cuenta", ObjetoMaster);

            return base.getFiltroMaster();
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override BindingSource listList(params object[] parametros) {
            try {
                // Agrega el filtro de base que debe utilizarse (para, por 
                // ejemplo, obtener solo el detail adecuado de un master)
                ICriterioConsulta master = getFiltroMaster();
                if (!Filtros.Contains(master))
                    Filtros.Add(master);

                // Ejecuta el filtro y obtiene resultados de la base (se debe sobrepasar en 
                // una subclase de ésta (y usar GetAllbyOrden) si se quieren los "muertos"
                _bs = _bs ?? new BindingSource();
                _bs.DataSource =
                    (ModoListado == EModoListado.OBJETO)
                        ? CollectionHelper.ConvertTo(RepositorioGenerico<Deuda>.GetByCriteria(false,
                              Filtros,
                              Ordenamiento))
                        : RepositorioGenerico<Deuda>.SelectByCriteria(false, Filtros, Ordenamiento);

                // Obtiene la cantidad de registros para mostrar
                Cuenta = ((DataTable) _bs.DataSource).Rows.Count;

                return _bs;
            } catch (Exception e) {
                throw new VistaErrorException("DATA-LISTNOK", e.ToString());
            }
        }
        #endregion IControladorListable Members
    }
}