///////////////////////////////////////////////////////////
//  CUListListas.cs
//  Clase de implementación de CUListListas.
//  Generated by Fernando
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fernando
///////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Windows.Forms;
using scioBaseLibrary.excepciones;
using scioControlLibrary;
using scioControlLibrary.enums;
using scioPersistentLibrary.acceso;
using scioPersistentLibrary.interfases;
using scioPersistentLibrary.orden;
using scioToolLibrary;
using sgmpro.dominio.configuracion;

namespace cuListaGestion {
    /// <summary>
    /// Esta clase hereda de CUListGenerico y se encarga de 
    /// gestionar un PanelListABMV para la entidad ListaGestion.
    /// </summary>
    public class CUListListas : CUPreviewGenerico<ListaGestion> {
        /// <summary>
        /// Constructor de la clase que inicializa elementos internos.
        /// </summary>
        public CUListListas() {
            ColsInvisibles.Add("ListaGestiones");
            ColsInvisibles.Remove("FechaBaja");
            Ordenamiento.Add(Orden.Desc("FchCreacion"));
        }

        #region IControladorListable Members
        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        protected override PanelListABMV<ListaGestion> crearPanelListado() {
            return new PanelListListas(this);
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        protected override PanelPreview<ListaGestion> crearPanelPreview() {
            return new PanelPreviewLista(ControlEditable);
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override BindingSource listList(params object[] parametros) {
            try {
                // Agrega el filtro de base que debe utilizarse (para, por 
                // ejemplo, obtener solo el detail adecuado de un master)
                ICriterioConsulta master = getFiltroMaster();
                if (!Filtros.Contains(master))
                    Filtros.Add(master);

                // Ejecuta el filtro y obtiene resultados de la base
                _bs = _bs ?? new BindingSource();

                _bs.DataSource = (ModoListado == EModoListado.OBJETO)
                                     ? CollectionHelper.ConvertTo(
                                           RepositorioGenerico<ListaGestion>.GetByCriteria(false, Filtros, Ordenamiento))
                                     : RepositorioGenerico<ListaGestion>.SelectByCriteria(false, Filtros, Ordenamiento);

                Cuenta = ((DataTable) _bs.DataSource).Rows.Count;
                return _bs;
            } catch (Exception e) {
                throw new VistaErrorException("DATA-LISTNOK", e.ToString());
            }
        }
        #endregion
    }
}