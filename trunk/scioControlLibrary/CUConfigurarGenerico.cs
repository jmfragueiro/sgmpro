///////////////////////////////////////////////////////////
//  CUConfigurarGenerico.cs
//  Clase de control para la ventana de configurar generica.
//  Generated by Fito
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fito
///////////////////////////////////////////////////////////
using System;
using System.Windows.Forms;
using scioBaseLibrary;
using scioBaseLibrary.excepciones;
using scioBaseLibrary.interfases;
using scioControlLibrary.interfaces;
using scioToolLibrary.enums;

namespace scioControlLibrary {
    public class CUConfigurarGenerico<T> : IControladorCasoUso where T : IControladorTree, new() {
        /// <summary>
        /// Implementación de la propiedad de la interfaz.
        /// </summary>
        public virtual object Padre { get { return _padre; } set { _padre = (Form) value; } }
        private Form _padre;

        #region Implementation of IControladorCasoUso
        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public virtual bool iniciar(object padre, params object[] valor) {
            try {
                // Controla que el padre sea de un tipo válido
                if (!(padre is Form))
                    return false;
                Padre = padre;

                // acepta cualquier parametro extra que se deba utilizar
                aceptarParametros(valor);

                // Crea y abre la ventana de configuracion
                new WinTreeConfig(new T()) {
                    StartPosition = FormStartPosition.CenterScreen,
                    MdiParent = ((Form) Padre)
                }.Show();

                // Si termina está ok, entonces retorna true
                return true;
            } catch (Exception e) {
                Sistema.Controlador.logear("UCCALLER-NOINIT", ENivelMensaje.ERROR, e.ToString());
                throw new AppErrorException("UCCALLER-NOINIT");
            }
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public virtual void aceptarParametros(params object[] valor) {}
        #endregion
    }
}