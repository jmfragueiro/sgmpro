///////////////////////////////////////////////////////////
//  CUPreviewGenerico.cs
//  Clase de implementación de CUPreviewGenerico.
//  Generated by Fito
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fito
///////////////////////////////////////////////////////////
using System.Drawing;
using System.Windows.Forms;
using scioControlLibrary.interfaces;
using scioControlLibrary.Properties;
using scioPersistentLibrary.acceso;
using scioToolLibrary;

namespace scioControlLibrary {
    /// <summary>
    /// Esta clase generica implementa IControladorListablePreview y debe
    /// servir como base para las clases que se encargan de gestionar un
    /// PanelListABMV de la entidad gestionada con posibilidad de Preview.
    /// </summary>
    public class CUPreviewGenerico<T> : CUListGenerico<T>, IControladorPreview<T> 
        where T : EntidadIdentificada<T>, new() {
        /// <summary>
        /// El panel de preview a utilizarse para mostrar cada instancia.
        /// </summary>
        protected PanelPreview<T> _panelPreview;

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public virtual PanelPreview<T> getPanelPreview(params object[] parametros) {
            if (_panelPreview == null)
                _panelPreview = crearPanelPreview();

            return _panelPreview;
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        protected virtual PanelPreview<T> crearPanelPreview() {
            return null;
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override void alActualizarFila(params object[] parametros) {
            base.alActualizarFila(parametros);

            if (_panelPreview != null)
                if (parametros[0] is T)
                    _panelPreview.setearObjeto((T) parametros[0]);
                else
                    _panelPreview.setearObjeto(_panelListado.getObjetoActual());
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public virtual string getTitulo() {
            return Mensaje.TextoMensaje("TITULO-ABMV-GENERICO")
                   + typeof(T).Name;
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public virtual Icon getIcono() {
            return Resources.winedit;
        }

        #region Implementation of IControladorPreview
        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public UserControl[] getPanelesTree() {
            return new UserControl[] {getPanelListado(ModoVista), getPanelPreview()};
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public virtual void alMostrar(params object[] parametros) {
            _panelListado.alMostrar(parametros);
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public virtual void alOcultar(params object[] parametros) {
            _panelListado.alOcultar(parametros);
        }
        #endregion Implementation of IControladorPreview
        }
}