///////////////////////////////////////////////////////////
//  IControladorPreview.cs
//  Implementation of the Interface IControladorPreview
//  Generated by Enterprise Architect
//  Created on:      15-Abr-2009 07:11:10 p.m.
//  Original author: Fito
///////////////////////////////////////////////////////////
using System.Drawing;
using scioPersistentLibrary.acceso;

namespace scioControlLibrary.interfaces {
    /// <summary>
    /// Interfase que hereda de IControladorListable y representa el comportamiento 
    /// deseable de una clase que gestiona y controla algún tipo de lista de objetos 
    /// de una entidad vía un listado de objetos, tal cual su interfase base, pero
    /// agregando la posiblidad de mostrar una vista de preview de cada instancia 
    /// listada, al seleccionarla del listado.
    /// </summary>
    public interface IControladorPreview<T> : IControladorListable<T>, IControladorListTree 
        where T : EntidadIdentificada<T> {
        /// <summary>
        /// Este método es el encargado de generar y devolver un panel
        /// de preview (un panel que solo muestra datos de un objeto 
        /// -puede ser un resumen-) y no permite editar sobre este.
        /// El panel de preview puede ser el mismo que el de edición, 
        /// con algún seteo especial apra decir que es no editable, o
        /// bien puede ser un panel diferente (eso lo decide la propia
        /// implementación en cada caso).
        /// </summary>
        /// <param name="parametros">
        /// Un vararg que acepta parametros que puedan necesitarse.
        /// </param>
        /// <returns>
        /// Un panel de preview listo para usar (ggg).
        /// </returns>
        PanelPreview<T> getPanelPreview(params object[] parametros);

        /// <summary>
        /// Este método debería devolver el titulo para la ventana que
        /// contiene al panel.
        /// </summary>
        /// <returns>
        /// Una cadena con el título de la ventana contenedora.
        /// </returns>
        string getTitulo();

        /// <summary>
        /// Este método debería devolver el icono para la ventana que
        /// contiene al panel.
        /// </summary>
        /// <returns>
        /// Un objeto que representa al icono para la ventana contenedora.
        /// </returns>
        Icon getIcono();
    }
}