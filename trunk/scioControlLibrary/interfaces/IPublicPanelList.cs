///////////////////////////////////////////////////////////
//  IPublicPanelList.cs
//  Implementation of the Interface IPublicPanelList
//  Generated by Enterprise Architect
//  Created on:      15-Abr-2009 07:11:10 p.m.
//  Original author: Fernando
///////////////////////////////////////////////////////////
using System.Collections.Generic;
using System.Windows.Forms;
using scioControlLibrary.enums;

namespace scioControlLibrary.interfaces {
    /// <summary>
    /// Interfase que representa el comportamiento público generico deseable 
    /// de una clase que implementa un panel de listado de una entidad del 
    /// sistema.
    /// </summary>
    public interface IPublicPanelList {
        /// <summary>
        /// Este método refresca el listado del panel con los datos que 
        /// devuelve el método list() del controlador del listado -debe 
        /// tener datos frescos-. Además, el método permite ocultar las 
        /// columnas cuyos titulos vienen en el List nocols.
        /// </summary>
        /// <param name="nocols">
        /// La lista de nombres de columnas que no se deben mostrar.
        /// </param>
        void refrescarListado(List<string> nocols);

        /// <summary>
        /// Este método permtie establecer el valor de multiselección
        /// del panel asociado al listado actual.
        /// </summary>
        /// <param name="setear">
        /// El valor 'true' para permitir multiselección o, si no, 'false'.
        /// </param>
        void setMultiSelect(bool setear);

        /// <summary>
        /// Este método establece el modo en que se visualiza
        /// el listado (qué botones se muestran) de acuerdo al
        /// modo de vista del controlador asociado.
        /// </summary>
        void setModoVista();

        /// <summary>
        /// Este método establece el modo en que se visualiza
        /// el listado (qué botones se muestran) de acuerdo al
        /// modo de vista del controlador asociado.
        /// </summary>
        void setModoVista(EModoVentana modo);

        /// <summary>
        /// Este método retorna la colección de filas del datagridview.
        /// </summary>
        /// <returns>
        /// Una colección con todas las filas del datagridview.
        /// </returns>
        DataGridViewRowCollection getRows();

        /// <summary>
        /// Este método es el encargado de devolver el componente
        /// visula padre del panel (el Parent), el que normalmente
        /// es un IPublicWinAbmv u otro contenedor.
        /// </summary>
        ContainerControl getParent();

        /// <summary>
        /// Este método permite acceder al controll específico dentro del
        /// cual se está efectivamente mostrando el listado (por ejemplo
        /// un datagridview en C#.Net).
        /// </summary>
        /// <returns>
        /// El control de interface de usuario especifico que muestra el listado.
        /// </returns>
        object getControlListado();
    }
}