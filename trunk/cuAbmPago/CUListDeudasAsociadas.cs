///////////////////////////////////////////////////////////
//  CUListDeudasAsociadas.cs
//  Clase de implementación de CUListDeudasAsociadas.
//  Generated by Fito
//  Created on:      08-abr-2009 11:32:54
//  Original author: Fito
///////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Data;
using System.Windows.Forms;
using scioBaseLibrary;
using scioBaseLibrary.excepciones;
using scioControlLibrary;
using scioControlLibrary.enums;
using scioPersistentLibrary.orden;
using scioToolLibrary;
using scioToolLibrary.enums;
using sgmpro.dominio.configuracion;
using sgmpro.dominio.configuracion.repos;

namespace cuAbmPago {
    /// <summary>
    /// Esta clase hereda de CUListGenerico y se encarga de gestionar
    /// PanelListABMV para la entidad Deuda para las deudas asociadas 
    /// a un pago.
    /// </summary>
    public class CUListDeudasAsociadas : CUListGenerico<Deuda> {
        private readonly PanelAbmvPago _panel;
        private readonly List<Deuda> _seleccion;
        private double _totalSeleccionado;

        /// <summary>
        /// Constructor de la clase que inicializa elementos internos.
        /// </summary>
        public CUListDeudasAsociadas(PanelAbmvPago panel) {
            _panel = panel;
            _seleccion = new List<Deuda>();

            ColsInvisibles.Add("Cuenta");
            ColsInvisibles.Add("Convenio");
            ColsInvisibles.Add("Imputaciones");
            ColsInvisibles.Add("CapitalO");
            ColsInvisibles.Add("InteresO");
            ColsInvisibles.Add("HonorO");
            ColsInvisibles.Add("GastosO");
            Ordenamiento.Add(Orden.Asc("FechaVencimiento"));
        }

        #region IControladorListable Members
        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override PanelListABMV<Deuda> getPanelListado(params object[] parametros) {
            return base.getPanelListado(EModoVentana.VIEW);
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override BindingSource listList(params object[] parametros) {
            try {
                // Ejecuta el filtro y obtiene resultados de la base
                _bs = _bs ?? new BindingSource();

                Cuenta cta = ((Cuenta)ObjetoMaster);
                _bs.DataSource = CollectionHelper.ConvertTo(Deudas.OrdenarPorFecha(cta.getDeudaTotalActual()));

                Cuenta = ((DataTable)_bs.DataSource).Rows.Count;
                return _bs;
            } catch (Exception e) {
                throw new VistaErrorException("DATA-LISTNOK", e.ToString());
            }
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// </summary>
        public override void listView(params object[] parametros) {
            Sistema.Controlador.mostrar("ACTION-VIEW-DEUDAPAGO-NOK", ENivelMensaje.INFORMACION, null, false);
        }

        /// <summary>
        /// Implementación del método de la interfaz.
        /// Aqui junta lo seleccionado y ademas calcula el total.
        /// </summary>
        public override void alActualizarSeleccion(DataGridViewSelectedRowCollection seleccion) {
            _seleccion.Clear();
            _totalSeleccionado = 0;

            foreach (DataGridViewRow row in seleccion) {
                Deuda dda = getObjectFromDataRow(((DataRowView)row.DataBoundItem).Row);
                _totalSeleccionado += dda.Total;
                _seleccion.Add(dda);
            }

            // Al cambiar la seleccion se recalculan los importes
            if (_seleccion.Count > 0)
                _panel.resetearCamposImportes();
        }
        #endregion

        #region helpers
        /// <summary>
        /// Retorna el conjunto de objeto seleccionados.
        /// </summary>
        public List<Deuda> getSeleccion() {
            return _seleccion;
        }
        #endregion

        #region publics
        public double getTotalSeleccionado() {
            return _totalSeleccionado;
        }
        #endregion
    }
}