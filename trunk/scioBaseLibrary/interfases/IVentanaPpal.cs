///////////////////////////////////////////////////////////
//  IVentanaPpal.cs
//  Implementation of the Interface IVentanaPpal
//  Generated by Enterprise Architect
//  Created on:      15-Abr-2009 07:11:10 p.m.
//  Original author: Fito
///////////////////////////////////////////////////////////
using System;

namespace scioBaseLibrary.interfases {
    public interface IVentanaPpal {
        /// <summary>
        /// Delegado encargado de manejar los eventos producidos por la 
        /// selección en las opciones del menú. Primero verifica si no
        /// es una opción que pueda manejarse localmente, sino utiliza 
        /// la clase CUCaller para llamar (via reflexión) al caso de uso
        /// externo generico que haya sido asociado (guardado en la tabla 
        /// Parametro en el campo valorstring) a la opción seleccionada.
        /// </summary>
        /// <param name="who">
        /// La opción de menú (MenuItem) que ha sido seleccionada.
        /// </param>
        /// <param name="e">
        /// El objeto que contiene datos sobre el evento producido.
        /// </param>
        void subMenuClick(object who, EventArgs e);

        /// <summary>
        /// Este método inicializa la barra de estado del sistema colocando
        /// los valores de textos iniciales.
        /// </summary>
        void inicializarBarraEstado();

        /// <summary>
        /// Este método intenta el inicio de sesión para el usuario, con 
        /// los datos que se han ingresado (sus argumentos) y utilizando
        /// los servicios de la clase Sistema (como controlador del padre
        /// del caso de uso). No maneja excepciones.
        /// </summary>
        /// <param name="user">
        /// El nombre del usuario que intenta el inicio de sesión.
        /// </param>
        /// <param name="pass">
        /// La contraseña del usuario que intenta el inicio de sesión.
        /// </param>
        void iniciarSesion(string user, string pass);

        /// <summary>
        /// Este método intenta el cierre de sesión para el usuario. No 
        /// se manejan aquí excepciones.
        /// </summary>
        void cerrarSesion();

        /// <summary>
        /// Este método muestra una cadena en la 1ra. sección de la 
        /// barra de estado (pensada para ayudas y tips).
        /// </summary>
        /// <param name="texto">
        /// La cadena a mostrarse en la 1ra. sección de la barra.
        /// </param>
        void setAyuda(string texto);

        /// <summary>
        /// Este método muestra una cadena en la 2da. sección de la 
        /// barra de estado (pensada para mostrar el usuario).
        /// </summary>
        /// <param name="texto">
        /// La cadena a mostrarse en la 2da. sección de la barra.
        /// </param>
        void setExtra1(string texto);

        /// <summary>
        /// Este método muestra una cadena en la 3ra. sección de la 
        /// barra de estado (pensada para mostrar la base).
        /// </summary>
        /// <param name="texto">
        /// La cadena a mostrarse en la 3ra. sección de la barra.
        /// </param>
        void setExtra2(string texto);
    }
}